{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///home/behaylu/Documents/project/upwork/postwork/restaurantSaaS/frontend/app/register/page.tsx"],"sourcesContent":["\"use client\";\nimport Image from \"next/image\"\nimport Link from \"next/link\"\n\nimport  {useForm} from 'react-hook-form';\nimport { User} from \"@/type/user\";\nimport {userService} from \"@/lib/services/userService\"\nimport { useState } from \"react\";\nimport toast from 'react-hot-toast';\nimport { useRouter } from \"next/navigation\";\nimport { useEffect } from \"react\";\nimport {useAuth} from '@/components/AuthContext'\n\nexport default function Register(){\n\n    const { register, handleSubmit, formState:{errors}} = useForm<User>();\n    const [isLoading,setIsLoading]= useState<boolean>(false)\n    const {isAuthenticated} = useAuth()\n    const router = useRouter()\n    const onSubmit = async (data:any)=>{\n        setIsLoading(true)\n       userService.registerUser(data).then((res:any)=>{\n        \n          setIsLoading(false)\n          toast.success(\"Uder has registered successfully\")\n           router.push('/login')\n        }).catch((error:any)=>{\n             \n          setIsLoading(false)\n        })\n    }\n    useEffect(()=>{\n        if(isAuthenticated){\n            router.push('/login')\n        }\n        \n    },[isAuthenticated])\n    return(\n        <div className=\"w-full h-screen flex items-center justify-center bg-gray-100 dark:bg-gray-900\">\n            <div className=\"w-full lg:w-3/4 xl:w-1/2 bg-transparent lg:bg-white flex justify-between\">\n                \n                <div className=\"flex-1 hidden lg:flex flex-col items-center justify-center py-12 px-10 bg-black rounded-r-4xl\">\n                    <div className=\"flex flex-col items-center justify-center\">\n                        <Image \n                            className=\"dark:invert\"\n                            src=\"/globe.svg\"\n                            alt=\"Vercel logomark\"\n                            width={100}\n                            height={38}\n                        />\n                        <h3 className=\"font-montserrat font-medium text-[23px] text-white text-center my-8 tracking-[12px]\">BookWarm</h3>\n                    </div>\n                    <span className=\"text-[14px] text-white my-8 font-normal\"> New to our platform? Sign In now.</span>\n                    <Link href={'/login'} className=\"py-2 px-16 text-center border border-white text-white rounded-lg hover:bg-white    /80 transition-all duration-300 cursor-pointer\">Sign In</Link>\n                </div>\n\n                <div className=\"flex-1 flex flex-col items-center justify-center gap-4 mb-8 py-12 px-10\">\n                    <Image\n                        className=\"dark:invert\"\n                        src=\"/globe.svg\"\n                        alt=\"Next.js logo\"\n                        width={100}\n                        height={38}\n                        priority\n                    />\n                    <div className=\"flex flex-col items-center\">\n                        <h3 className=\"font-montserrat font-medium text-[23px] text-gray-900 text-center dark:text-white my-8 tracking-[12px]\">Create Account</h3>\n                        <span className=\"w-full text-center mb-8 font-normal text-[14px] text-gray-700 dark:text-gray-300\">Please enter your details to create an account</span>\n                     <form onSubmit={handleSubmit(onSubmit)} className=\"w-full\">\n                        <input \n                            type=\"text\" \n                            id=\"username\"\n                            {...register(\"username\", { required:\"Username is required\" })}\n                            \n                            placeholder=\"Username\"\n                            className=\"w-full h-10 px-4 border border-gray-300 rounded-lg mb-4 focus:outline-none focus:border-blue-500\"\n                        />\n                        {errors.username && <span className=\"text-red-500\">{errors.username.message}</span>}\n                        <input\n                            type=\"email\"\n                            id=\"email\"\n                            {...register(\"email\", { required: \"Email is required\" })}\n                            placeholder=\"Email\"\n                            className=\"w-full h-10 px-4 border border-gray-300 rounded-lg mb-4 focus:outline-none focus:border-blue-500\"\n                        />\n                        {errors.email && <span className=\"text-red-500\">{errors.email.message}</span>}\n                        <input\n                            type=\"password\"\n                           id=\"password\"\n                           {...register(\"password\", { required:\"Password is required\"})}\n                            placeholder=\"Password\"\n                            className=\"w-full h-10 px-4 border border-gray-300 rounded-lg mb-2 focus:outline-none focus:border-blue-500\"\n                        />\n                       \n                        <button \n                        type=\"submit\"\n                        className=\"w-full bg-black text-white text-center py-2 mt-5 font-medium rounded-lg hover:bg-black/80 transition-all duration-300 cursor-pointer\">\n                            {isLoading?<span className=\"inline-block w-6 h-6 border-4 border-blue-500 border-t-transparent rounded-full animate-spin\"></span>:\"Sign Up\"}\n                            \n                            \n                            </button>\n                              <Link href={'/login'} className=\"block lg:hidden self-start text-[14px] text-gray-700 mt-3 \">You do have account <span className=\"font-medium\">Sign In</span>  here</Link>\n         \n                     </form>\n                    </div>\n\n                    \n\n                </div>\n                \n            </div>\n        </div>      \n        \n    )\n}"],"names":[],"mappings":"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","debugId":null}}]
}